import sqlite3

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import CallbackContext

from logger import log

con = sqlite3.connect("players.db", check_same_thread=False)
cur = con.cursor()
list_of_players = [i[0] for i in cur.execute('SELECT tg_id FROM cities').fetchall()]

RESOURCES, MARKET, POPULATION, CONSTRUCTION, FOREIGN_POLICY = range(2, 7)

@log
def resources(update: Update, context: CallbackContext):
    resources_markup = ReplyKeyboardMarkup([['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']], one_time_keyboard=False, resize_keyboard=True)
    user_id = update.message.from_user.id
    if user_id in list_of_players:
        resources_1 = cur.execute('SELECT farms FROM buildings WHERE tg_id = {}'.format(user_id)).fetchone()[0]
        resources_2 = cur.execute('SELECT quarries FROM buildings WHERE tg_id = {}'.format(user_id)).fetchone()[0]
        resources_3 = cur.execute('SELECT sawmills FROM buildings WHERE tg_id = {}'.format(user_id)).fetchone()[0]
        resources_4 = cur.execute('SELECT iron_mines FROM buildings WHERE tg_id = {}'.format(user_id)).fetchone()[0]
        resources_5 = cur.execute('SELECT gold_mines FROM buildings WHERE tg_id = {}'.format(user_id)).fetchone()[0]
        update.message.reply_text('–í–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã\n'
                                  'üßëüèª‚Äçüåæ –§–µ—Ä–º—ã: {}\n'
                                  'ü™® –ö–∞–º–µ–Ω–æ–ª–æ–º–Ω–∏: {}\n'
                                  'ü™µ –õ–µ—Å–æ–ø–∏–ª–∫–∏: {}\n'
                                  'üè≠ –ñ–µ–ª–µ–∑–Ω—ã–µ –∑–∞–≤–æ–¥—ã: {}\n'
                                  'üí∞ –ó–∞–≤–æ–¥—ã –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –∑–æ–ª–æ—Ç–∞: {}'.format(
                                      resources_1, resources_2, resources_3, resources_4, resources_5
                                  ), reply_markup=resources_markup)
    else:
        update.message.reply_text('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ¬Ø\_(„ÉÑ)_/¬Ø')
    return RESOURCES


@log
def market(update: Update, context: CallbackContext):
    market_markup = ReplyKeyboardMarkup([['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']], one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text("–†—ã–Ω–æ–∫", reply_markup=market_markup)
    return MARKET


@log
def population(update: Update, context: CallbackContext):
    population_markup = ReplyKeyboardMarkup([['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']], one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text("–í–∞—à–µ –Ω–∞—Å–µ–ª–µ–Ω–∏–µ", reply_markup=population_markup)
    return POPULATION


@log
def construction(update: Update, context: CallbackContext):
    construction_markup = ReplyKeyboardMarkup([['–§–µ—Ä–º–∞', '–ö–∞–º–µ–Ω–æ–ª–æ–º–Ω—è', '–õ–µ—Å–æ–ø–∏–ª–∫–∞'],
                                               ['–ñ–µ–ª–µ–∑–Ω—ã–π —Ä—É–¥–Ω–∏–∫', '–ó–æ–ª–æ—Ç–æ–π —Ä—É–¥–Ω–∏–∫'],
                                               ['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']], one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text(
        "–ö–∞–∫–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤ –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å?", reply_markup=construction_markup)
    return CONSTRUCTION


@log
def foreign_policy(update: Update, context: CallbackContext):
    foreign_policy_markup = ReplyKeyboardMarkup([['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']], one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text(
        "–í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞", reply_markup=foreign_policy_markup)
    return FOREIGN_POLICY
