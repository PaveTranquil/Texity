from secrets import API_KEY

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (CallbackContext, CommandHandler, ConversationHandler,
                          Filters, MessageHandler, Updater)

from game import (CONSTRUCTION, FOREIGN_POLICY, MARKET, POPULATION, RESOURCES, INFO, WAITING_FOR_SUMM, CHANGE_OR_GO_TO_MENU, WAITING_FOR_CITY_NAME, MENU, NOT_ENOUGH_GOLD, SUCCESSFUL_BUYING, BAD_SUMM,
                  con, construction, cur, foreign_policy, list_of_players,
                  market, population, resources, get_info_about_city, buy_food, successful_buying, not_enough_gold, check_food_and_wood)
from logger import log

markup = ReplyKeyboardMarkup([['–ì–æ—Ä–æ–¥'],
                              ['–†–µ—Å—É—Ä—Å—ã', '–†—ã–Ω–æ–∫'],
                              ['–ù–∞—Å–µ–ª–µ–Ω–∏–µ', '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ'],
                              ['–í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞']],
                             one_time_keyboard=False, resize_keyboard=True)



@log
def start(update: Update, context: CallbackContext) -> int:
    user_id = update.message.from_user.id
    if user_id not in list_of_players:
        update.message.reply_text(
            '''
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ Texity - –ø–æ—à–∞–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å —Å–≤–µ—Ç–ª–æ–≥–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ –±—É–¥—É—â–µ–≥–æ.

–ò—Ç–∞–∫, –≤–≤–µ–¥–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞! ''',
        )

        return WAITING_FOR_CITY_NAME

    context.chat_data['city_name'] = cur.execute(
        'SELECT city FROM cities WHERE tg_id = {}'.format(user_id)).fetchone()[0]
    update.message.reply_text("–í–Ω–æ–≤—å –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(
        context.chat_data['city_name']), reply_markup=markup)
    return MENU


@log
def set_name(update: Update, context: CallbackContext) -> int:
    name, user_id = update.message.text, update.message.from_user.id
    update.message.reply_text('''
–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–∞—à –≥–æ—Ä–æ–¥ —Å –≥–æ—Ä–¥—ã–º –∏–º–µ–Ω–µ–º {} –∂–¥—É—Ç –Ω–µ–±—ã–≤–∞–ª—ã–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è.
–£–¥–∞—á–∏, –∏–º–ø–µ—Ä–∞—Ç–æ—Ä! ‚úäüèª
–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –º–µ—Ö–∞–Ω–∏–∫–∞–º.
    '''.format(name),
    )
    
    cur.execute('''INSERT INTO cities VALUES ({}, "{}")'''.format(user_id, name))
    cur.execute('''INSERT INTO buildings VALUES ({}, 1, 1, 1, 1, 1)'''.format(user_id))
    cur.execute('''INSERT INTO resources VALUES ({}, 1000, 1000, 1000, 1000, 1000)'''.format(user_id))
    list_of_players.append(user_id)
    con.commit()
    context.chat_data['city_name'] = name

    update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(context.chat_data['city_name']), reply_markup=markup)
    return MENU


@log
def help(update: Update, context: CallbackContext) -> int:
    # todo: –í—ã–∑–≤–≤–∞—Ç—å –∞–¥–º–∏–Ω–æ–≤ –∏–ª–∏ –ø–æ—Ä–µ—à–∞—Ç—å, –∫–∞–∫ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å /help
    update.message.reply_text(
        '–ú–∏—Ä —Å—É—Ä–æ–≤. –ü–æ—ç—Ç–æ–º—É —Ä–∞–±–∏—Ä–∞–π—Å—è —Å–∞–º.', reply_markup=ReplyKeyboardRemove()
    )

    return ConversationHandler.END


@log
def menu(update: Update, context: CallbackContext):
    update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(context.chat_data['city_name']), reply_markup=markup)
    return MENU



def run():
    updater = Updater(API_KEY)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            WAITING_FOR_CITY_NAME: [MessageHandler(Filters.text, set_name)],
            MENU: [MessageHandler(Filters.regex('^(–ì–æ—Ä–æ–¥)$'), get_info_about_city),
                   MessageHandler(Filters.regex('^(–†–µ—Å—É—Ä—Å—ã)$'), resources),
                   MessageHandler(Filters.regex('^(–†—ã–Ω–æ–∫)$'), market),
                   MessageHandler(Filters.regex('^(–ù–∞—Å–µ–ª–µ–Ω–∏–µ)$'), population),
                   MessageHandler(Filters.regex('^(–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ)$'), construction),
                   MessageHandler(Filters.regex('^(–í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞)$'), foreign_policy)],
            RESOURCES: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            MARKET: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                     MessageHandler(Filters.regex('^(–ï–¥–∞)$'), buy_food)],
            POPULATION: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            CONSTRUCTION: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            FOREIGN_POLICY: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            INFO: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            WAITING_FOR_SUMM: [MessageHandler(Filters.text, check_food_and_wood)],
            CHANGE_OR_GO_TO_MENU: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                              MessageHandler(Filters.regex('^(–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑)$'), market)],

        },
        fallbacks=[CommandHandler('cancel', menu)],
    )

    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()

run()