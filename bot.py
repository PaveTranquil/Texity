from datetime import datetime
from secrets import API_KEY

from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import (CallbackContext, CommandHandler, ConversationHandler,
                          Filters, MessageHandler, Updater)

from game import (BACK_TO_MENU, CHANGE_OR_GO_TO_MENU_ARMY,
                  CHANGE_OR_GO_TO_MENU_BUILDINGS, CHANGE_OR_GO_TO_MENU_MARKET,
                  CHANGE_OR_GO_TO_MENU_REMELTING, PRODUCTIONS, FOREIGN_POLICY,
                  HIRE_ARMY, HIRING, MARKET, MENU, POPULATION, RESOURCES,
                  SUCCESSFUL_BUILD, SUCCESSFUL_BUYING, SUCCESSFUL_HIRING,
                  SUCCESSFUL_REMELTING, WAITING_FOR_CITY_NAME,
                  WAITING_FOR_COUNT_OF_METAL, WAITING_FOR_COUNT_TO_BUILD,
                  WAITING_FOR_SUM_TO_BUY, WAITING_FOR_TYPE_OF_METAL, attack,
                  build_farms, build_gold_mines, build_iron_mines,
                  build_quarries, build_sawmills, build_sieges, buy_food,
                  buy_iron, buy_stone, buy_wood, check_build, check_buy,
                  check_hiring, check_remelt, con, chose_type_of_buildings, cultivating,
                  cur, foreign_policy, get_info_about_city,
                  get_info_about_opposite, hire_army, hire_cavalry,
                  hire_infantry, hire_spy, list_of_players, market,
                  path_to_city, population, remelt_gold, remelt_iron,
                  remelting, resources, scouting, WAITING_FOR_TYPE_OF_BUILDING, STORAGES, OTHERS,
                  build_productions, build_storages, build_others, build_storages_food, build_storages_wood,
                  build_storages_iron, build_storages_gold, build_storages_stone, build_storages_iron_ore, build_storages_gold_ore,
                  build_houses)
from helpfuncs import (HELP, about_city, about_constrution,
                       about_foreign_policy, about_market, about_population,
                       about_resources, help_)
from logger import log

img_city = open("city.jpg", 'rb')

markup = ReplyKeyboardMarkup([['–ì–æ—Ä–æ–¥'],
                              ['–†–µ—Å—É—Ä—Å—ã', '–†—ã–Ω–æ–∫'],
                              ['–ù–∞—Å–µ–ª–µ–Ω–∏–µ', '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ'],
                              ['–í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞']],
                             one_time_keyboard=False, resize_keyboard=True)


@log
def start(update: Update, context: CallbackContext) -> int:
    user_id = update.message.from_user.id
    if user_id not in list_of_players:
        update.message.reply_text(
            '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ Texity - –ø–æ—à–∞–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π '
            '—Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å —Å–≤–µ—Ç–ª–æ–≥–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ '
            '–±—É–¥—É—â–µ–≥–æ. –ò—Ç–∞–∫, –≤–≤–µ–¥–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞! ''',
        )

        return WAITING_FOR_CITY_NAME

    context.chat_data['city_name'] = cur.execute(
        'SELECT city FROM cities WHERE tg_id = {}'.format(user_id)).fetchone()[0]
    update.message.reply_photo(img_city,
                               "–í–Ω–æ–≤—å –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(context.chat_data['city_name']),
                               reply_markup=markup)
    img_city.seek(0)
    return MENU


@log
def set_name(update: Update, context: CallbackContext) -> int:
    name, user_id = update.message.text, update.message.from_user.id
    update.message.reply_text(
        '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–∞—à –≥–æ—Ä–æ–¥ —Å –≥–æ—Ä–¥—ã–º –∏–º–µ–Ω–µ–º {} –∂–¥—É—Ç '
        '–Ω–µ–±—ã–≤–∞–ª—ã–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è. –£–¥–∞—á–∏, –∏–º–ø–µ—Ä–∞—Ç–æ—Ä! ‚úäüèª\n –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å '
        '–∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ –º–µ—Ö–∞–Ω–∏–∫–∞–º.'.format(name))

    cur.execute('INSERT INTO cities VALUES ({}, "{}", 0.5, 1, 2, 1, 0)'.format(user_id, name))
    cur.execute('INSERT INTO buildings VALUES ({}, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)'.format(user_id))
    cur.execute('INSERT INTO army VALUES ({}, 15, 5, 3)'.format(user_id))
    cur.execute('INSERT INTO resources VALUES ({}, 1000, '
                '1000, 1000, 1000, 1000, 1000, 1000, 1000, "{}")'.format(user_id,
                                                                         datetime.now().isoformat(sep=' ')))
    list_of_players.append(user_id)
    con.commit()
    context.chat_data['city_name'] = name

    update.message.reply_photo(img_city,
                               "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(context.chat_data['city_name']),
                               reply_markup=markup)
    img_city.seek(0)
    return MENU


@log
def menu(update: Update, context: CallbackContext):
    update.message.reply_photo(img_city,
                               "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {}!".format(context.chat_data['city_name']),
                               reply_markup=markup)
    img_city.seek(0)
    return MENU


def run():
    updater = Updater(API_KEY)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MENU: [MessageHandler(Filters.regex('^(–ì–æ—Ä–æ–¥)$'), get_info_about_city),
                   MessageHandler(Filters.regex('^(–†–µ—Å—É—Ä—Å—ã)$'), resources),
                   MessageHandler(Filters.regex('^(–†—ã–Ω–æ–∫)$'), market),
                   MessageHandler(Filters.regex('^(–ù–∞—Å–µ–ª–µ–Ω–∏–µ)$'), population),
                   MessageHandler(Filters.regex('^(–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ)$'), chose_type_of_buildings),
                   MessageHandler(Filters.regex('^(–í–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞)$'), foreign_policy),
                   CommandHandler('help', help_)],

            RESOURCES: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                        MessageHandler(Filters.regex('^(–°–æ–±—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã)$'), cultivating),
                        MessageHandler(Filters.regex('^(–ü–µ—Ä–µ–ø–ª–∞–≤–∏—Ç—å —Ä—É–¥—É)$'), remelting),
                        CommandHandler('help', help_)],

            MARKET: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                     MessageHandler(Filters.regex('^(–ï–¥–∞)$'), buy_food),
                     MessageHandler(Filters.regex('^(–î–µ—Ä–µ–≤–æ)$'), buy_wood),
                     MessageHandler(Filters.regex('^(–ö–∞–º–Ω–∏)$'), buy_stone),
                     MessageHandler(Filters.regex('^(–ñ–µ–ª–µ–∑–æ)$'), buy_iron),
                     CommandHandler('help', help_)],

            POPULATION: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                         MessageHandler(Filters.regex('^(–ù–∞–Ω—è—Ç—å –∞—Ä–º–∏—é)$'), hire_army),
                         CommandHandler('help', help_)],

            PRODUCTIONS: [MessageHandler(Filters.regex('^(–õ–µ—Å–æ–ø–∏–ª–∫–∞)$'), build_sawmills),
                          MessageHandler(Filters.regex('^(–§–µ—Ä–º–∞)$'), build_farms),
                          MessageHandler(Filters.regex('^(–ö–∞–º–µ–Ω–æ–ª–æ–º–Ω—è)$'), build_quarries),
                          MessageHandler(Filters.regex('^(–ó–æ–ª–æ—Ç–æ–π —Ä—É–¥–Ω–∏–∫)$'), build_gold_mines),
                          MessageHandler(Filters.regex('^(–ñ–µ–ª–µ–∑–Ω—ã–π —Ä—É–¥–Ω–∏–∫)$'), build_iron_mines),
                          MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                           CommandHandler('help', help_)],

            FOREIGN_POLICY: [MessageHandler(Filters.regex('^(–†–∞—Å—á–∏—Å—Ç–∏—Ç—å –ø—É—Ç—å –∫ –≥–æ—Ä–æ–¥—É üß≠)$'), path_to_city),
                             MessageHandler(Filters.regex('^(–ù–∞ —Ä–∞–∑–≤–µ–¥–∫—É! ü•∑üèª)$'), scouting),
                             MessageHandler(Filters.regex('^(–í –∞—Ç–∞–∫—É! ‚öîÔ∏è)$'), attack),
                             MessageHandler(Filters.regex('^(–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–µ ‚ÑπÔ∏è)$'), get_info_about_opposite),
                             MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                             CommandHandler('help', help_)],
            BACK_TO_MENU: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                           CommandHandler('help', help_)],

            WAITING_FOR_CITY_NAME: [MessageHandler(Filters.text, set_name)],
            WAITING_FOR_SUM_TO_BUY: [MessageHandler(Filters.text, check_buy)],
            WAITING_FOR_COUNT_TO_BUILD: [MessageHandler(Filters.text, check_build)],
            WAITING_FOR_TYPE_OF_METAL: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                        MessageHandler(Filters.regex('^(–ñ–µ–ª–µ–∑–Ω–∞—è —Ä—É–¥–∞)$'), remelt_iron),
                                        MessageHandler(Filters.regex('^(–ó–æ–ª–æ—Ç–∞—è —Ä—É–¥–∞)$'), remelt_gold)],
            WAITING_FOR_COUNT_OF_METAL: [MessageHandler(Filters.text, check_remelt)],

            CHANGE_OR_GO_TO_MENU_MARKET: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                          MessageHandler(Filters.regex('^(–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑)$'), market),
                                          CommandHandler('help', help_)],
            CHANGE_OR_GO_TO_MENU_BUILDINGS: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                             MessageHandler(Filters.regex('^(–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑)$'), chose_type_of_buildings),
                                             CommandHandler('help', help_)],
            CHANGE_OR_GO_TO_MENU_REMELTING: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                             MessageHandler(Filters.regex('^(–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑)$'), remelting),
                                             CommandHandler('help', help_)],
            CHANGE_OR_GO_TO_MENU_ARMY: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                        MessageHandler(Filters.regex('^(–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑)$'), hire_army),
                                        CommandHandler('help', help_)],

            SUCCESSFUL_BUYING: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                MessageHandler(Filters.regex('^(–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏)$'), market),
                                CommandHandler('help', help_)],
            SUCCESSFUL_BUILD: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                               MessageHandler(Filters.regex('^(–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ)$'), chose_type_of_buildings),
                               CommandHandler('help', help_)],
            SUCCESSFUL_REMELTING: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                   MessageHandler(Filters.regex('^(–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–ø–ª–∞–≤–∫—É)$'), remelting),
                                   CommandHandler('help', help_)],
            SUCCESSFUL_HIRING: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                MessageHandler(Filters.regex('^(–ù–∞–Ω—è—Ç—å –µ—â–µ –≤–æ–π—Å–∫–∞)$'), hire_army),
                                CommandHandler('help', help_)],

            HIRE_ARMY: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                        MessageHandler(Filters.regex('^(–ù–∞–Ω—è—Ç—å –ø–µ—Ö–æ—Ç—É)$'), hire_infantry),
                        MessageHandler(Filters.regex('^(–ù–∞–Ω—è—Ç—å –∫–∞–≤–∞–ª–µ—Ä–∏—é)$'), hire_cavalry),
                        MessageHandler(Filters.regex('^(–ù–∞–Ω—è—Ç—å —Ä–∞–∑–≤–µ–¥—á–∏–∫–æ–≤)$'), hire_spy),
                        MessageHandler(Filters.regex('^(–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –æ—Å–∞–¥–Ω—ã–µ –º–∞—à–∏–Ω—ã)$'), build_sieges),
                        CommandHandler('help', help_)],
            HIRING: [MessageHandler(Filters.text, check_hiring)],

            HELP: [MessageHandler(Filters.regex('^(–ü—Ä–æ —Ä—ã–Ω–æ–∫)$'), about_market),
                   MessageHandler(Filters.regex('^(–ü—Ä–æ –≥–æ—Ä–æ–¥)$'), about_city),
                   MessageHandler(Filters.regex('^(–ü—Ä–æ —Ä–µ—Å—É—Ä—Å—ã)$'), about_resources),
                   MessageHandler(Filters.regex('^(–ü—Ä–æ –Ω–∞—Å–µ–ª–µ–Ω–∏–µ)$'), about_population),
                   MessageHandler(Filters.regex('^(–ü—Ä–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ)$'), about_constrution),
                   MessageHandler(Filters.regex('^(–ü—Ä–æ –≤–Ω–µ—à–Ω—é—é –ø–æ–ª–∏—Ç–∏–∫—É)$'), about_foreign_policy),
                   MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu)],
            WAITING_FOR_TYPE_OF_BUILDING: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                                           MessageHandler(Filters.regex('^(–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞)$'), build_productions),
                                           MessageHandler(Filters.regex('^(–•—Ä–∞–Ω–∏–ª–∏—â–∞)$'), build_storages),
                                           MessageHandler(Filters.regex('^(–ü—Ä–æ—á–∏–µ —Å—Ç—Ä–æ–µ–Ω–∏—è)$'), build_others)],
            STORAGES: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                       MessageHandler(Filters.regex('^(–ï–¥–∞)$'), build_storages_food),
                       MessageHandler(Filters.regex('^(–î–µ—Ä–µ–≤–æ)$'), build_storages_wood),
                       MessageHandler(Filters.regex('^(–ñ–µ–ª–µ–∑–æ)$'), build_storages_iron),
                       MessageHandler(Filters.regex('^(–ó–æ–ª–æ—Ç–æ)$'), build_storages_gold),
                       MessageHandler(Filters.regex('^(–ö–∞–º–Ω–∏)$'), build_storages_stone),
                       MessageHandler(Filters.regex('^(–ñ–µ–ª–µ–∑–Ω–∞—è —Ä—É–¥–∞)$'), build_storages_iron_ore),
                       MessageHandler(Filters.regex('^(–ó–æ–ª–æ—Ç–∞—è —Ä—É–¥–∞)$'), build_storages_gold_ore)],
            OTHERS: [MessageHandler(Filters.regex('^(–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é)$'), menu),
                     MessageHandler(Filters.regex('^(–ñ–∏–ª—ã–µ –∑–¥–∞–Ω–∏—è)$'), build_houses)]

        },
        fallbacks=[CommandHandler('cancel', menu)],
    )

    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()


run()
